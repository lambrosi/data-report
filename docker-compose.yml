---
version: '3.3'
services:

######  Main application ######
  application:
    build: .
    ports: ['8080:8080', '8081:8081']
    links :
      - rabbitmq:rabbitmq
      - kafka:kafka
    volumes:
      - '/usr/share/services/file-processor-service'
      - '/usr/share/services/directory-monitor-service'
    depends_on: ['rabbitmq', 'kafka']

###### Messaging systems ######
  zookeeper:
    image: zookeeper:3.4.9
    hostname: zookeeper
    ports: ['2181:2181']

  kafka:
    image: confluentinc/cp-kafka:5.3.1
    hostname: kafka
    ports: ['9092:9092']
    environment: 
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "file-processed:1:1"
    depends_on: ['zookeeper']
  
  rabbitmq:
    image: rabbitmq:3.6-management
    ports: ['15672:15672']

###### Monitoring stack ######
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.5.0
    ports: ['9200:9200']

  logstash:
    image: docker.elastic.co/logstash/logstash:6.5.0
    ports: ['9600:9600']
    command: logstash
    volumes: 
      - './monitoring-config/pipelines.yml:/usr/share/logstash/config/pipelines.yml'
      - './monitoring-config/kafka-logstash.conf:/usr/share/logstash/config/kafka-logstash.conf'
      - './monitoring-config/logs-logstash.conf:/usr/share/logstash/config/logs-logstash.conf'
    depends_on: ['elasticsearch']

  kibana:
    image: docker.elastic.co/kibana/kibana:6.5.0
    ports: ['5601:5601']
    depends_on: ['elasticsearch']
